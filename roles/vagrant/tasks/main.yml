---
- name: Install vagrant
  become: true
  become_user: root
  community.general.pacman:
    name:
      - vagrant

- name: Get list of vagrant plugins
  become: true
  become_user: "{{ user_name }}"
  ansible.builtin.command: vagrant plugin list
  changed_when: false
  register: vagrant_plugins

- name: Install vagrant-libvirt plugin
  become: true
  become_user: "{{ user_name }}"
  ansible.builtin.command: vagrant plugin install vagrant-libvirt
  changed_when: true
  when: vars.vagrant_provider == "libvirt" and "vagrant-libvirt" not in vagrant_plugins.stdout

- name: Install vagrant plugins
  become: true
  become_user: "{{ user_name }}"
  ansible.builtin.command: vagrant plugin install "{{ item }}"
  changed_when: true
  when: item not in vagrant_plugins.stdout
  loop:
    - vagrant-disksize
    - vagrant-cachier

- name: Ensure directory exists
  become: true
  become_user: "{{ user_name }}"
  ansible.builtin.file:
    path: ~/archlinux_vm
    state: directory
    mode: 0755
  when: vars.vagrant_prepare_archlinux_vm

- name: Copy Vagrantfile
  become: true
  become_user: "{{ user_name }}"
  ansible.builtin.copy:
    src: Vagrantfile
    dest: ~/archlinux_vm/
    mode: 0644
  when: vars.vagrant_prepare_archlinux_vm
