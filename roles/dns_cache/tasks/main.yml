---
- name: Install dnsmasq and openresolv
  community.general.pacman:
    name:
      - dnsmasq
      - openresolv

- name: Make sure that systemd-resolvconf is not used
  community.general.pacman:
    name:
      - systemd-resolvconf
    state: absent

- name: Copy resolvconf.conf
  ansible.builtin.copy:
    src: resolvconf.conf
    dest: /etc/resolvconf.conf
    mode: 0644
  notify:
    - Update resolvconf subscribers

- name: Ensure directory exists
  ansible.builtin.file:
    path: /etc/dnsmasq.d
    state: directory
    mode: 0755

# This file will be overwritten by handler later on
# This is just to make sure dnsmasq won't panic on not seeing the file
- name: Ensure the resolvconf generate file exists
  ansible.builtin.file:
    path: /etc/dnsmasq-conf.conf
    mode: 0644
    state: touch
    modification_time: preserve
    access_time: preserve

- name: Configure dnsmasq to look for the appends
  ansible.builtin.lineinfile:
    dest: /etc/dnsmasq.conf
    state: "present"
    regexp: "^{{ item.match }}"
    insertafter: "^#{{ item.match }}"
    line: "{{ item.line }}"
    validate: dnsmasq --conf-file=%s --test
  loop:
    - {match: "conf-dir=", line: "conf-dir=/etc/dnsmasq.d"}

- name: Template dnsmasq append
  ansible.builtin.template:
    src: dnsmasq_append.conf
    dest: /etc/dnsmasq.d/arch_ansible.conf
    mode: 0644
  notify:
    - Restart dnsmasq

- name: Obtain service facts, to check if systemd-resolved exists
  ansible.builtin.service_facts:

- name: Make sure that systemd-resolved is not running
  ansible.builtin.systemd:
    name: systemd-resolved.service
    enabled: false
    state: stopped
  when: '"systemd-resolved.service" in services'

- name: Start and enable dnsmasq
  ansible.builtin.systemd:
    name: dnsmasq.service
    enabled: true
    state: started

- name: Make network manager use the resolvconf
  ansible.builtin.template:
    src: nm-rc-manager.conf
    dest: /etc/NetworkManager/conf.d/rc-manager.conf
    mode: 0644
  notify:
    - Reload networkmanager
